# 📝 IPO設計テンプレート（記入式）

このテンプレートに記入していけば、設計から実装までスムーズに進められます。

---

## 📌 プロジェクト情報

```
プロジェクト名: ________________________________

作成日: ____年____月____日

作成者: ________________________________

目的: ________________________________________________
     ________________________________________________
```

---

## ステップ1: IPO分析テンプレート

### 🎯 全体のIPO

```
┌──────────────────────────────────────────┐
│  システム名: _________________________   │
├──────────────────────────────────────────┤
│ Input (入力) - 何を受け取る？             │
│ ・______________________________________│
│ ・______________________________________│
│ ・______________________________________│
│ ・______________________________________│
├──────────────────────────────────────────┤
│ Process (処理) - 何をする？               │
│ ・______________________________________│
│ ・______________________________________│
│ ・______________________________________│
│ ・______________________________________│
├──────────────────────────────────────────┤
│ Output (出力) - 何を返す？                │
│ ・______________________________________│
│ ・______________________________________│
│ ・______________________________________│
│ ・______________________________________│
└──────────────────────────────────────────┘
```

### 📋 各機能のIPO

#### 機能1: ______________________

```
Input (入力):
  ・_________________________________________
  ・_________________________________________

Process (処理):
  ・_________________________________________
  ・_________________________________________

Output (出力):
  ・_________________________________________
  ・_________________________________________
```

#### 機能2: ______________________

```
Input (入力):
  ・_________________________________________
  ・_________________________________________

Process (処理):
  ・_________________________________________
  ・_________________________________________

Output (出力):
  ・_________________________________________
  ・_________________________________________
```

#### 機能3: ______________________

```
Input (入力):
  ・_________________________________________
  ・_________________________________________

Process (処理):
  ・_________________________________________
  ・_________________________________________

Output (出力):
  ・_________________________________________
  ・_________________________________________
```

---

## ステップ2: 要件定義テンプレート

### 📝 機能要件チェックリスト

```
必須機能:
[ ] _______________________________________________
[ ] _______________________________________________
[ ] _______________________________________________
[ ] _______________________________________________
[ ] _______________________________________________

オプション機能:
[ ] _______________________________________________
[ ] _______________________________________________
[ ] _______________________________________________
```

### 🎨 非機能要件

```
保守性:
[ ] _______________________________________________
[ ] _______________________________________________

再利用性:
[ ] _______________________________________________
[ ] _______________________________________________

可読性:
[ ] _______________________________________________
[ ] _______________________________________________

拡張性:
[ ] _______________________________________________
[ ] _______________________________________________
```

### 📊 制約条件

```
技術的制約:
・________________________________________________
・________________________________________________

実装上の制約:
・________________________________________________
・________________________________________________

その他の制約:
・________________________________________________
・________________________________________________
```

---

## ステップ3: クラス設計テンプレート

### 🏗️ クラス一覧

#### クラス1: ______________________

```
役割: _______________________________________________

属性（変数）:
  - _________________ : ______ (型)  # 説明: __________
  - _________________ : ______ (型)  # 説明: __________
  - _________________ : ______ (型)  # 説明: __________

メソッド:
  - _________________(引数) -> 戻り値型  # 説明: __________
  - _________________(引数) -> 戻り値型  # 説明: __________
  - _________________(引数) -> 戻り値型  # 説明: __________

継承: [ ] なし  [ ] あり（親: __________________）
```

#### クラス2: ______________________

```
役割: _______________________________________________

属性（変数）:
  - _________________ : ______ (型)  # 説明: __________
  - _________________ : ______ (型)  # 説明: __________
  - _________________ : ______ (型)  # 説明: __________

メソッド:
  - _________________(引数) -> 戻り値型  # 説明: __________
  - _________________(引数) -> 戻り値型  # 説明: __________
  - _________________(引数) -> 戻り値型  # 説明: __________

継承: [ ] なし  [ ] あり（親: __________________）
```

#### クラス3: ______________________

```
役割: _______________________________________________

属性（変数）:
  - _________________ : ______ (型)  # 説明: __________
  - _________________ : ______ (型)  # 説明: __________
  - _________________ : ______ (型)  # 説明: __________

メソッド:
  - _________________(引数) -> 戻り値型  # 説明: __________
  - _________________(引数) -> 戻り値型  # 説明: __________
  - _________________(引数) -> 戻り値型  # 説明: __________

継承: [ ] なし  [ ] あり（親: __________________）
```

### 🔗 クラス関連図（手書き用スペース）

```
クラス間の関係を図で描いてください:

・継承関係（親→子）
・関連関係（参照）
・集約関係（含む）








```

---

## ステップ4: データ構造設計テンプレート

### 📊 各クラスのデータモデル

#### クラス1: ______________________

```python
{
    "変数名1": 型,      # 説明: _______________________
    "変数名2": 型,      # 説明: _______________________
    "変数名3": 型,      # 説明: _______________________
}
```

**初期値:**
```
変数名1 = _______________
変数名2 = _______________
変数名3 = _______________
```

#### クラス2: ______________________

```python
{
    "変数名1": 型,      # 説明: _______________________
    "変数名2": 型,      # 説明: _______________________
    "変数名3": 型,      # 説明: _______________________
}
```

**初期値:**
```
変数名1 = _______________
変数名2 = _______________
変数名3 = _______________
```

---

## ステップ5: メソッド設計テンプレート

### 📝 メソッド詳細設計

#### クラス: ______________ メソッド: ______________

```
┌─────────────────────────────────────────┐
│ メソッド名: _________________________  │
├─────────────────────────────────────────┤
│ 目的:                                   │
│ _______________________________________ │
│                                         │
├─────────────────────────────────────────┤
│ Input (引数):                           │
│ ・引数名1: 型  # 説明: ________________│
│ ・引数名2: 型  # 説明: ________________│
│                                         │
├─────────────────────────────────────────┤
│ Process (処理):                         │
│ 1. ___________________________________│
│ 2. ___________________________________│
│ 3. ___________________________________│
│                                         │
├─────────────────────────────────────────┤
│ Output (戻り値):                        │
│ ・型: ________  # 説明: _______________│
│                                         │
├─────────────────────────────────────────┤
│ 特記事項:                               │
│ _______________________________________ │
└─────────────────────────────────────────┘
```

#### クラス: ______________ メソッド: ______________

```
┌─────────────────────────────────────────┐
│ メソッド名: _________________________  │
├─────────────────────────────────────────┤
│ 目的:                                   │
│ _______________________________________ │
│                                         │
├─────────────────────────────────────────┤
│ Input (引数):                           │
│ ・引数名1: 型  # 説明: ________________│
│ ・引数名2: 型  # 説明: ________________│
│                                         │
├─────────────────────────────────────────┤
│ Process (処理):                         │
│ 1. ___________________________________│
│ 2. ___________________________________│
│ 3. ___________________________________│
│                                         │
├─────────────────────────────────────────┤
│ Output (戻り値):                        │
│ ・型: ________  # 説明: _______________│
│                                         │
├─────────────────────────────────────────┤
│ 特記事項:                               │
│ _______________________________________ │
└─────────────────────────────────────────┘
```

---

## ステップ6: 実装順序計画テンプレート

### 📅 実装スケジュール

```
Phase 1: 基礎実装
  [ ] ファイル名: ____________  予定: ___時間  実績: ___時間
  [ ] ファイル名: ____________  予定: ___時間  実績: ___時間

Phase 2: 機能実装
  [ ] ファイル名: ____________  予定: ___時間  実績: ___時間
  [ ] ファイル名: ____________  予定: ___時間  実績: ___時間

Phase 3: 統合・テスト
  [ ] ファイル名: ____________  予定: ___時間  実績: ___時間
  [ ] ファイル名: ____________  予定: ___時間  実績: ___時間

合計予定時間: _______時間
合計実績時間: _______時間
```

### 🎯 実装の依存関係

```
ステップ1: _________________ （依存なし）
  ↓
ステップ2: _________________ （依存: ___________）
  ↓
ステップ3: _________________ （依存: ___________）
  ↓
ステップ4: _________________ （依存: ___________）
  ↓
ステップ5: _________________ （依存: ___________）
```

---

## ステップ7: 実装チェックリスト

### ✅ ファイル1: ______________________

```
基本実装:
[ ] クラス定義
[ ] コンストラクタ（__init__）
[ ] 必須メソッド1: _________________
[ ] 必須メソッド2: _________________
[ ] 必須メソッド3: _________________

品質:
[ ] 型ヒント追加
[ ] Docstring追加
[ ] デストラクタ追加
[ ] コメント追加

テスト:
[ ] 単体テスト作成
[ ] テスト実行
[ ] エラー修正
```

### ✅ ファイル2: ______________________

```
基本実装:
[ ] クラス定義
[ ] 継承（親: ___________）
[ ] super().__init__()
[ ] 必須メソッド1: _________________
[ ] 必須メソッド2: _________________

品質:
[ ] 型ヒント追加
[ ] Docstring追加
[ ] デストラクタ追加
[ ] コメント追加

テスト:
[ ] 単体テスト作成
[ ] テスト実行
[ ] エラー修正
```

---

## ステップ8: テスト計画テンプレート

### 🧪 テストケース一覧

#### テストケース1

```
テスト項目: ______________________________________

テスト内容:
  ・_____________________________________________
  ・_____________________________________________

期待結果:
  ・_____________________________________________
  ・_____________________________________________

実行日: ____年____月____日
結果: [ ] 成功  [ ] 失敗
備考: ____________________________________________
```

#### テストケース2

```
テスト項目: ______________________________________

テスト内容:
  ・_____________________________________________
  ・_____________________________________________

期待結果:
  ・_____________________________________________
  ・_____________________________________________

実行日: ____年____月____日
結果: [ ] 成功  [ ] 失敗
備考: ____________________________________________
```

#### テストケース3

```
テスト項目: ______________________________________

テスト内容:
  ・_____________________________________________
  ・_____________________________________________

期待結果:
  ・_____________________________________________
  ・_____________________________________________

実行日: ____年____月____日
結果: [ ] 成功  [ ] 失敗
備考: ____________________________________________
```

---

## ステップ9: デバッグ記録テンプレート

### 🐛 バグ報告書

#### バグ #1

```
発見日: ____年____月____日
重要度: [ ] 高  [ ] 中  [ ] 低

現象:
________________________________________________
________________________________________________

再現手順:
1. ___________________________________________
2. ___________________________________________
3. ___________________________________________

原因:
________________________________________________
________________________________________________

対処方法:
________________________________________________
________________________________________________

修正日: ____年____月____日
確認者: _____________________
```

#### バグ #2

```
発見日: ____年____月____日
重要度: [ ] 高  [ ] 中  [ ] 低

現象:
________________________________________________
________________________________________________

再現手順:
1. ___________________________________________
2. ___________________________________________
3. ___________________________________________

原因:
________________________________________________
________________________________________________

対処方法:
________________________________________________
________________________________________________

修正日: ____年____月____日
確認者: _____________________
```

---

## ステップ10: 完成チェックリスト

### ✨ 最終確認

#### 機能確認
```
[ ] すべての要件を満たしている
[ ] すべてのテストが成功している
[ ] エラーが発生しない
[ ] 期待通りの出力がされる
[ ] 例外処理が適切
```

#### コード品質
```
[ ] Docstringがすべてのクラス・メソッドにある
[ ] 型ヒントが適切に付いている
[ ] 変数名が適切
[ ] インデントが統一されている
[ ] コメントが適切
[ ] マジックナンバーを定数化している
```

#### ドキュメント
```
[ ] README.mdを作成した
[ ] 使い方を記載した
[ ] 必要なライブラリを記載した
[ ] 実行方法を記載した
```

#### リファクタリング
```
[ ] 重複コードを削除した
[ ] 長いメソッドを分割した
[ ] 適切な設計パターンを適用した
```

---

## 📊 プロジェクト振り返りシート

### 良かった点

```
1. ________________________________________________

2. ________________________________________________

3. ________________________________________________
```

### 改善点

```
1. ________________________________________________

2. ________________________________________________

3. ________________________________________________
```

### 学んだこと

```
1. ________________________________________________

2. ________________________________________________

3. ________________________________________________
```

### 次回への課題

```
1. ________________________________________________

2. ________________________________________________

3. ________________________________________________
```

---

## 🎓 使い方ガイド

### このテンプレートの使い方

1. **印刷して手書き**
   - PDFにして印刷
   - 手書きで記入

2. **テキストエディタで記入**
   - Markdown形式で保存
   - _ の部分に記入

3. **プロジェクト管理ツールで利用**
   - Notion、Trello等にコピー
   - チームで共有

### 記入のコツ

- **最初は大まか**に埋める
- **段階的に詳細化**する
- **随時更新**する
- **振り返り**を忘れずに

---

**このテンプレートがあなたの開発を支えます！📝✨**
